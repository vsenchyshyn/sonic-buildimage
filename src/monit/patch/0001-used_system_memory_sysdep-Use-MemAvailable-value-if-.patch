From c392362c9c1d57256b7e8ab7c77926824677fd73 Mon Sep 17 00:00:00 2001
From: Joe LeVeque <jolevequ@microsoft.com>
Date: Tue, 19 Nov 2019 01:51:13 +0000
Subject: [PATCH] [used_system_memory_sysdep] Use 'MemAvailable' value if
 available

---
 src/process/sysdep_LINUX.c | 35 +++++++++++++++++++++++------------
 1 file changed, 23 insertions(+), 12 deletions(-)

diff --git a/src/process/sysdep_LINUX.c b/src/process/sysdep_LINUX.c
index 0d18f85..221e785 100644
--- a/src/process/sysdep_LINUX.c
+++ b/src/process/sysdep_LINUX.c
@@ -335,6 +335,7 @@ int getloadavg_sysdep(double *loadv, int nelem) {
 boolean_t used_system_memory_sysdep(SystemInfo_T *si) {
         char          *ptr;
         char           buf[2048];
+        unsigned long  mem_available = 0UL;
         unsigned long  mem_free = 0UL;
         unsigned long  buffers = 0UL;
         unsigned long  cached = 0UL;
@@ -343,22 +344,32 @@ boolean_t used_system_memory_sysdep(SystemInfo_T *si) {
         unsigned long  swap_free = 0UL;
 
         if (! file_readProc(buf, sizeof(buf), "meminfo", -1, NULL)) {
-                LogError("system statistic error -- cannot get real memory free amount\n");
+                LogError("system statistic error -- cannot read /proc/meminfo\n");
                 goto error;
         }
 
-        /* Memory */
-        if (! (ptr = strstr(buf, "MemFree:")) || sscanf(ptr + 8, "%ld", &mem_free) != 1) {
-                LogError("system statistic error -- cannot get real memory free amount\n");
-                goto error;
+        /*
+         * Memory
+         *
+         * First, check if the "MemAvailable" value is available on this system. If it is, we will
+         * use it. Otherwise we will attempt to calculate the amount of available memory ourself.
+         */
+        if ((ptr = strstr(buf, "MemAvailable:")) && sscanf(ptr + 13, "%ld", &mem_available) == 1) {
+                si->total_mem = systeminfo.mem_max - (uint64_t)mem_available * 1024;
+        } else {
+                DEBUG("'MemAvailable' value not available on this system. Attempting to calculate available memory manually...\n");
+                if (! (ptr = strstr(buf, "MemFree:")) || sscanf(ptr + 8, "%ld", &mem_free) != 1) {
+                        LogError("system statistic error -- cannot get real memory free amount\n");
+                        goto error;
+                }
+                if (! (ptr = strstr(buf, "Buffers:")) || sscanf(ptr + 8, "%ld", &buffers) != 1)
+                        DEBUG("system statistic error -- cannot get real memory buffers amount\n");
+                if (! (ptr = strstr(buf, "Cached:")) || sscanf(ptr + 7, "%ld", &cached) != 1)
+                        DEBUG("system statistic error -- cannot get real memory cache amount\n");
+                if (! (ptr = strstr(buf, "SReclaimable:")) || sscanf(ptr + 13, "%ld", &slabreclaimable) != 1)
+                        DEBUG("system statistic error -- cannot get slab reclaimable memory amount\n");
+                si->total_mem = systeminfo.mem_max - (uint64_t)(mem_free + buffers + cached + slabreclaimable) * 1024;
         }
-        if (! (ptr = strstr(buf, "Buffers:")) || sscanf(ptr + 8, "%ld", &buffers) != 1)
-                DEBUG("system statistic error -- cannot get real memory buffers amount\n");
-        if (! (ptr = strstr(buf, "Cached:")) || sscanf(ptr + 7, "%ld", &cached) != 1)
-                DEBUG("system statistic error -- cannot get real memory cache amount\n");
-        if (! (ptr = strstr(buf, "SReclaimable:")) || sscanf(ptr + 13, "%ld", &slabreclaimable) != 1)
-                DEBUG("system statistic error -- cannot get slab reclaimable memory amount\n");
-        si->total_mem = systeminfo.mem_max - (uint64_t)(mem_free + buffers + cached + slabreclaimable) * 1024;
 
         /* Swap */
         if (! (ptr = strstr(buf, "SwapTotal:")) || sscanf(ptr + 10, "%ld", &swap_total) != 1) {
-- 
2.17.1

